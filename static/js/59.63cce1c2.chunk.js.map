{"version":3,"file":"static/js/59.63cce1c2.chunk.js","mappings":"mKACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAgH,+BAAhH,EAA6J,6B,UCA7J,EAA6B,+BAA7B,EAAqE,2B,SCcrE,MAXA,SAAoBA,GAChB,OACI,SAAC,KAAD,CAASC,GAAI,YAAcD,EAAME,GAAIC,UAAW,qBAAGC,SAA0BC,EAAW,EAAxC,EAAhD,UACI,iBAAKF,UAAWE,EAAhB,WACI,gBAAKC,IAAI,4GACT,0BAAON,EAAMO,WAI5B,ECZD,EAA8B,iCCQ9B,MANA,SAAqBP,GACjB,OACI,gBAAKG,UAAWE,EAAhB,SAAgCL,EAAMQ,SAE7C,E,UCgCD,SAASC,EAAWT,GAAQ,IAAD,EACvB,GAKIU,EAAAA,EAAAA,IAAQ,CAAC,GAJTC,EADJ,EACIA,SACAC,EAFJ,EAEIA,aACAC,EAHJ,EAGIA,MACaC,EAJjB,EAIIC,UAAaD,OAWXE,EAAgB,CAClBC,SAAU,IAGd,OACI,+BACI,kBAAMC,SAAUN,GAAa,SAAAO,GAAI,OAAInB,EAAMoB,YAAYD,EAAKF,SAAUJ,EAAOG,EAA5C,IAAjC,WACI,4BACI,6BAAUK,UAfC,SAACC,GACV,UAAVA,EAAEC,KAAoBD,EAAEE,WACxBF,EAAEG,iBACFb,GAAa,SAAAO,GAAI,OAAInB,EAAMoB,YAAYD,EAAKF,SAAUJ,EAAOG,EAA5C,GAAjBJ,GAEP,EAUwDc,YAAY,4BAA+Bf,EAAS,WAAY,CACrGgB,SAAU,6BACVC,QAAS,CACLC,MAAO,cACPrB,QAAS,sBAEbsB,UAAW,CACPD,MAAO,EACPrB,QAAS,IAEbuB,UAAW,CACPF,MAAO,IACPrB,QAAQ,6CAGfM,EAAOG,WAAY,iCAAIH,EAAOG,gBAAX,aAAI,EAAiBT,cAE7C,0BACI,kBAAOwB,KAAK,iBAK/B,CAED,MAjFA,SAAiBhC,GACb,IAAIiC,EAAajC,EAAMkC,QACnBC,EAAcnC,EAAMoC,SAGpBC,EAAkBJ,EACjBK,KAAI,SAACC,EAAIC,GAAL,OAAW,SAAC,EAAD,CAAoBtC,GAAIqC,EAAGrC,GAAIK,KAAMgC,EAAGhC,MAAvBiC,EAA5B,IAELC,EAAmBN,EAClBG,KAAI,SAACC,EAAIC,GAAL,OAAW,SAAC,EAAD,CAAqBhC,QAAS+B,EAAG/B,SAAfgC,EAA7B,IAQT,OACI,iBAAKrC,UAAWE,EAAhB,WACI,gBAAKF,UAAWE,EAAhB,SACKgC,KAEL,iBAAKlC,UAAWE,EAAhB,UACKoC,GACD,gBAAKtC,UAAWE,EAAhB,UACI,SAACI,EAAD,CAAYW,YAbV,SAACsB,EAAM7B,EAAOG,GAC5BhB,EAAM2C,WAAWD,GACjB7B,EAAMG,EACT,WAeJ,E,wCCtBD,IAAM4B,EAAqB,CACnBD,WAAAA,EAAAA,GAQR,GALyBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAbJ,SAA0BC,GACtB,MAAO,CACHC,eAAgBD,EAAME,YAAYD,eAClCd,QAASa,EAAME,YAAYC,YAC3Bd,SAAUW,EAAME,YAAYE,aAEnC,GAO4BP,GACzBQ,EAAAA,EAFqBP,CAGvBQ,E,kJClBF,SAASC,EAAwBP,GAC7B,MAAO,CACHQ,OAAQR,EAAMS,KAAKD,OAE1B,CAEc,SAASH,EAAkBK,GAAY,IAC5CC,EAD2C,0IAE7C,WACI,OAAKC,KAAK3D,MAAMuD,QACT,SAACE,GAAD,UAAeE,KAAK3D,SADI,SAAC,KAAD,CAAUC,GAAI,UAEhD,KAL4C,GACjB2D,EAAAA,WAMhC,OAAOd,EAAAA,EAAAA,IAAQQ,EAARR,CAAiCY,EAC3C,C","sources":["webpack://frontapp/./src/Components/Pages/Dialogs/Dialogs.module.css?f9a6","webpack://frontapp/./src/Components/Pages/Dialogs/DialogItem/DialogItem.module.css?8ccf","Components/Pages/Dialogs/DialogItem/DialogItem.jsx","webpack://frontapp/./src/Components/Pages/Dialogs/MessageItem/MessageItem.module.css?6d2b","Components/Pages/Dialogs/MessageItem/MessageItem.jsx","Components/Pages/Dialogs/Dialogs.jsx","Components/Pages/Dialogs/DialogsContainer.jsx","HOC/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialogs_wrapper__9G8WY\",\"dialogsItems\":\"Dialogs_dialogsItems__tSEI4\",\"messagesItems\":\"Dialogs_messagesItems__6nxVK\",\"messageForm\":\"Dialogs_messageForm__QNkaU\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogItem\":\"DialogItem_dialogItem__HTB18\",\"active\":\"DialogItem_active__NvPno\"};","/* eslint-disable jsx-a11y/alt-text */\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './DialogItem.module.css';\r\n\r\nfunction DialogItem(props) {\r\n    return (\r\n        <NavLink to={\"/dialogs/\" + props.id} className={({ isActive }) => isActive ? s.active : \"\"}>\r\n            <div className={s.dialogItem}>\r\n                <img src=\"https://cdn.shopify.com/s/files/1/0276/9341/6585/files/Sleeping_Cat_Square_600x600@2x.jpg?v=1580223452\" />\r\n                <span>{props.name}</span>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"messageItem\":\"MessageItem_messageItem__kb7Wr\"};","/* eslint-disable jsx-a11y/alt-text */\r\nimport s from './MessageItem.module.css';\r\n\r\nfunction MessageItem(props) {\r\n    return (\r\n        <div className={s.messageItem}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default MessageItem;","/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction Dialogs(props) {\r\n    let dialogList = props.dialogs;\r\n    let messageList = props.messages;\r\n\r\n    // Отображение контактов и сообщений, а также их сортировка\r\n    let dialogsElements = dialogList\r\n        .map((el, i) => <DialogItem key={i} id={el.id} name={el.name} />);\r\n\r\n    let messagesElements = messageList\r\n        .map((el, i) => <MessageItem key={i} message={el.message} />);\r\n\r\n    // Работа с Action'ами\r\n    let sendMessage = (text, reset, defaultValues) => {\r\n        props.addMessage(text);\r\n        reset(defaultValues);\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messagesItems}>\r\n                {messagesElements}\r\n                <div className={s.messageForm}>\r\n                    <DialogForm sendMessage={sendMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DialogForm(props) {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors },\r\n    } = useForm({});\r\n\r\n    // Отправка формы при нажатии Enter\r\n    const handleUserKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSubmit(data => props.sendMessage(data.textarea, reset, defaultValues))();\r\n        }\r\n    }\r\n\r\n    const defaultValues = {\r\n        textarea: ''\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(data => props.sendMessage(data.textarea, reset, defaultValues))}>\r\n                <div>\r\n                    <textarea onKeyDown={handleUserKeyPress} placeholder='Enter your message here.' {...register('textarea', {\r\n                        required: 'Textarea can not be empty.',\r\n                        pattern: {\r\n                            value: /^(?!\\s*$).+/,\r\n                            message: 'Non-correct value.'\r\n                        },\r\n                        minLength: {\r\n                            value: 1,\r\n                            message: ''\r\n                        },\r\n                        maxLength: {\r\n                            value: 5000,\r\n                            message: `Message cannot exceed 5000 characters`\r\n                        }\r\n                    })} />\r\n                    {errors.textarea && <p>{errors.textarea?.message}</p>}\r\n                </div>\r\n                <div>\r\n                    <input type='submit' />\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","/* eslint-disable jsx-a11y/alt-text */\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { addMessage } from './../../../Redux/dialogsReducer';\r\nimport withAuthRedirect from '../../../HOC/withAuthRedirect';\r\nimport { compose } from '@reduxjs/toolkit';\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        dialogTextarea: state.dialogsPage.dialogTextarea,\r\n        dialogs: state.dialogsPage.dialogsData,\r\n        messages: state.dialogsPage.messagesData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n        addMessage\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nfunction mapStateToPropsRedirect(state) {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default function withAuthRedirect (Component) {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}"],"names":["props","to","id","className","isActive","s","src","name","message","DialogForm","useForm","register","handleSubmit","reset","errors","formState","defaultValues","textarea","onSubmit","data","sendMessage","onKeyDown","e","key","shiftKey","preventDefault","placeholder","required","pattern","value","minLength","maxLength","type","dialogList","dialogs","messageList","messages","dialogsElements","map","el","i","messagesElements","text","addMessage","mapDispatchToProps","compose","connect","state","dialogTextarea","dialogsPage","dialogsData","messagesData","withAuthRedirect","Dialogs","mapStateToPropsRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}